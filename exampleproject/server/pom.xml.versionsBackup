<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.optimaize.anythingworks.exampleproject</groupId>
        <artifactId>anythingworks-exampleproject</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>

    <groupId>com.optimaize.anythingworks.exampleproject.server</groupId>
    <artifactId>anythingworks-exampleproject-server</artifactId>
    <name>anythingworks-exampleproject-server</name>

    <description>
        The sample server app in this example project that runs a web service.
    </description>

    <properties>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.optimaize.anythingworks.exampleproject.ontology</groupId>
            <artifactId>anythingworks-exampleproject-ontology</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.optimaize.anythingworks.server.implgrizzly</groupId>
            <artifactId>anythingworks-server-implgrizzly</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.optimaize.anythingworks.server.impljdk</groupId>
            <artifactId>anythingworks-server-impljdk</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>


        <!-- this demo app uses spring. -->

        <dependency><!-- for the @Inject annotation -->
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <!--
            Core utilities used by other modules.
            Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
            Expression Language (depends on spring-core)
            Define this if you use Spring Expression APIs (org.springframework.expression.*)
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
            Bean Factory and JavaBeans utilities (depends on spring-core)
            Define this if you use Spring Bean APIs (org.springframework.beans.*)
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
            Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
            Define this if you use Spring AOP APIs (org.springframework.aop.*)
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
            Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
            This is the central artifact for Spring's Dependency Injection Container and is generally always defined
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <dependency>
            <!-- for swagger artifacts generation at build time -->
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
            <scope>compile</scope><!-- see, only for build time. -->
            <version>${swagger.version}</version>
            <exclusions>
                <exclusion>
                    <!-- don't know why the exclusion, that's how the example does it at
                         https://github.com/kongchen/swagger-maven-example/blob/master/pom.xml -->
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>



    <build>
        <plugins>

            <plugin>
                <!-- for swagger artifacts generation at build time -->
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>${swagger-maven-plugin.version}</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>false</springmvc>
                            <locations>com.optimaize.anythingworks.exampleproject.server.services.rest</locations>
                            <schemes>http</schemes>
                            <host>localhost</host>
                            <basePath>/rest/v1</basePath>
                            <info>
                                <title>Anythingworks Swagger REST Api</title>
                                <version>v1</version>
                                <description>This is a sample for swagger-maven-plugin</description>
                                <termsOfService>
                                    http://www.example.com.com/terms
                                </termsOfService>
                                <contact>
                                    <email>support@example.com</email>
                                    <name>John Doe</name>
                                    <url>http://www.example.com</url>
                                </contact>
                                <license>
                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                                    <name>Apache 2.0</name>
                                </license>
                            </info>
                            <!-- Support classpath or file absolute path here.
                            1) classpath e.g: "classpath:/markdown.hbs", "classpath:/templates/hello.html"
                            2) file e.g: "${basedir}/src/main/resources/markdown.hbs",
                                "${basedir}/src/main/resources/template/hello.html" -->
                            <templatePath>${basedir}/swagger/templates/strapdown.html.hbs</templatePath>
                            <outputPath>${basedir}/swagger/generated/document.html</outputPath>
                            <swaggerDirectory>${basedir}/swagger/generated/swagger-ui</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>
